name: PHP Composer

on:
  push:
    branches: [ GitHubActions ]
    tags: ['*']
  pull_request:
    branches: [ master ]
  
jobs:
  build:
    services:
      # mysql-service Label used to access the service container
      mysql-service:
        # Docker Hub image (also with version)
        image: mysql:5.7
        env:
          ## Accessing to Github secrets, where you can store your configuration - but at the moment we'll hard code them.
          ## MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_ROOT_PASSWORD: automated_tests
          MYSQL_DATABASE: automated_tests
          ## map the "external" 33306 port with the "internal" 3306
        ports:
          - 3306:3306
          # Set health checks to wait until mysql database has started (it takes some seconds to start)
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    runs-on: ubuntu-latest
    
    env: 
      INSTANCE_URL: http://localhost DATABASE_DRIVER=MYSQL DATABASE_NAME=automated_tests DATABASE_HOST=localhost DATABASE_USER=automated_tests DATABASE_PASSWORD=automated_tests INSTANCE_ADMIN_USER=admin INSTANCE_ADMIN_PASSWORD=admin1 COMPOSER_MEMORY_LIMIT=-1
    steps:
    - uses: actions/checkout@v2
    - name: Make sure we are using composer v1
      run: |
        sudo composer self-update --1
        sudo chown $USER $HOME/.composer
    - name: Show the composer version
      run : composer --version
    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
    - name: test MySQL connection
      run: |
        mysql --version
        mysql -h 127.0.0.1 -P 3306
    - name: Setup Database
      run: |
        mysql -e "CREATE DATABASE automated_tests CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;"
    # mysql -u root -e "CREATE USER 'automated_tests'@'localhost' IDENTIFIED BY 'automated_tests';"
    # mysql -u root -e "GRANT ALL PRIVILEGES ON automated_tests.* TO 'automated_tests'@'localhost';"
    # NOTE : All of this might be replaced, by including an PHP Apache docker image name instead, and mapping the volume...
    - name: Install Apache
      run: |
        apt-get update
        apt-get install apache2 libapache2-mod-fastcgi
    - name: Enable FPM
      run: |
        cp ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.d/www.conf.default ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.d/www.conf 2>/dev/null || true
        cp ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.conf.default ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.conf
        a2enmod rewrite actions fastcgi alias
        echo "cgi.fix_pathinfo = 1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
        sed -i -e "s,www-data,travis,g" /etc/apache2/envvars
        chown -R travis:travis /var/lib/apache2/fastcgi
        ~/.phpenv/versions/$(phpenv version-name)/sbin/php-fpm
        
    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
    
